#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer definitions
#define BASE 0
#define SHIFT 1
#define EXTEND 2
#define SYMBOLS 3
#define NUMBERS 4
#define FUNCTION 5

/ {
    // One-shot modifier configuration
    behaviors {
        os_shift: one_shot_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "ONE_SHOT_SHIFT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&sk>;
        };
        
        os_ctrl: one_shot_ctrl {
            compatible = "zmk,behavior-hold-tap";
            label = "ONE_SHOT_CTRL";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&sk>;
        };
        
        os_alt: one_shot_alt {
            compatible = "zmk,behavior-hold-tap";
            label = "ONE_SHOT_ALT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&sk>;
        };
        
        os_gui: one_shot_gui {
            compatible = "zmk,behavior-hold-tap";
            label = "ONE_SHOT_GUI";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&sk>;
        };
        
        shift_enter: shift_enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&mo>, <&kp>;
        };
    };

    // Combos for layer access
    combos {
        compatible = "zmk,combos";
        
        // Function layer (both outer thumbs)
        combo_function {
            timeout-ms = <50>;
            key-positions = <30 33>;
            bindings = <&mo FUNCTION>;
        };
        
        // Numbers layer (Shift + Symbols)
        combo_numbers {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&mo NUMBERS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // BASE Layer (Colemak-DH with apostrophe moved)
        base_layer {
            bindings = <
                &kp Q    &kp W    &kp F    &kp P    &kp B     &kp J    &kp L    &kp U     &kp Y    &kp BSPC
                &kp A    &kp R    &kp S    &kp T    &kp G     &kp M    &kp N    &kp E     &kp I    &kp O
                &kp Z    &kp X    &kp C    &kp D    &kp V     &kp K    &kp H    &kp COMMA &kp DOT  &kp FSLH
                                  &mo EXTEND &shift_enter SHIFT RET  &shift_enter SHIFT SPACE &mo SYMBOLS
            >;
        };

        // SHIFT Layer
        shift_layer {
            bindings = <
                &kp LS(Q) &kp LS(W) &kp LS(F) &kp LS(P) &kp LS(B)     &kp LS(J) &kp LS(L) &kp LS(U)     &kp LS(Y) &kp BSPC
                &kp LS(A) &kp LS(R) &kp LS(S) &kp LS(T) &kp LS(G)     &kp LS(M) &kp LS(N) &kp LS(E)     &kp LS(I) &kp LS(O)
                &kp LS(Z) &kp LS(X) &kp LS(C) &kp LS(D) &kp LS(V)     &kp LS(K) &kp LS(H) &kp LT       &kp GT    &kp QMARK
                                    &trans    &trans    &trans        &trans
            >;
        };

        // EXTEND Layer (Navigation & modifiers)
        extend_layer {
            bindings = <
                &kp ESC   &none     &none     &none     &none         &kp PG_UP &kp HOME  &kp UP    &kp END   &kp BSPC
                &os_alt LALT LALT  &os_gui LGUI LGUI  &os_shift LSHFT LSHFT &os_ctrl LCTRL LCTRL &os_alt RALT RALT      &kp PG_DN &kp LEFT  &kp DOWN  &kp RIGHT &kp DEL
                &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &kp LGUI      &kp INS   &kp TAB   &none     &none     &kp RET
                                    &trans    &none     &none         &none
            >;
        };

        // SYMBOLS Layer
        symbols_layer {
            bindings = <
                &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT     &kp CARET &kp LPAR  &kp RPAR  &kp UNDER &kp BSPC
                &os_alt LALT LALT  &os_gui LGUI LGUI  &os_shift LSHFT LSHFT &os_ctrl LCTRL LCTRL &os_alt RALT RALT      &kp PIPE  &kp LBKT  &kp RBKT  &kp MINUS &kp SEMI
                &kp GRAVE &kp TILDE &kp APOS  &kp DQT   &kp COLON     &kp BSLH  &kp LBRC  &kp RBRC  &kp PLUS  &kp EQUAL
                                    &none     &none     &none         &trans
            >;
        };

        // NUMBERS Layer
        numbers_layer {
            bindings = <
                &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT     &kp CARET &kp N7    &kp N8    &kp N9    &kp PLUS
                &os_alt LALT LALT  &os_gui LGUI LGUI  &os_shift LSHFT LSHFT &os_ctrl LCTRL LCTRL &os_alt RALT RALT      &kp PIPE  &kp N4    &kp N5    &kp N6    &kp MINUS
                &none     &none     &none     &none     &none         &kp N0    &kp N1    &kp N2    &kp N3    &kp EQUAL
                                    &none     &trans    &trans        &none
            >;
        };

        // FUNCTION Layer
        function_layer {
            bindings = <
                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3   &kp C_BRI_UP &kp F7    &kp F8    &kp F9    &kp F12
                &os_alt LALT LALT   &os_gui LGUI LGUI     &os_shift LSHFT LSHFT    &os_ctrl LCTRL LCTRL    &os_alt RALT RALT       &kp C_BRI_DN &kp F4    &kp F5    &kp F6    &kp F11
                &kp C_VOL_UP &kp C_VOL_DN &kp C_MUTE &kp C_NEXT &kp C_PREV    &kp C_PP  &kp F1    &kp F2    &kp F3    &kp F10
                                        &trans       &none        &none          &none
            >;
        };
    };
};
